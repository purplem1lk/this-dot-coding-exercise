{"ast":null,"code":"var _jsxFileName = \"/Users/susanma/ThisDot/this-dot-final/src/components/UserCard.tsx\";\nimport React, { useState } from 'react';\nimport { useQuery } from 'react-query';\nimport './UserCard.css';\nimport { UserDetailsCounts } from './UserDetailsCounts';\n\nconst fetchOneUser = async (key, login) => {\n  const starCount = `https://api.github.com/users/${login}/starred?per_page=1`;\n  const userMetaData = `https://api.github.com/users/${login}`;\n  const urls = [starCount, userMetaData];\n  const responses = await Promise.all(urls.map(url => fetch(url)));\n  let linkHeader = null;\n  const data = await Promise.all(responses.map(response => {\n    const headers = response.headers;\n\n    if (headers.has('link')) {\n      // There are many headers that are returned in the response above. The starCount variable is a hard-coded url that puts one star per page, which will provide us the number of stars in the `per_page=` parameter. The chained methods below allow us to get the star count.\n      linkHeader = headers.get('link').split('page=').slice(-1).pop().split('>').shift();\n    }\n\n    return response.json();\n  })); // linkHeader gives us the star count is pushed into data in order to be used in useQuery.\n\n  data.push(linkHeader);\n  return data;\n};\n\nexport const UserCard = props => {\n  const [showDetails, setShowDetails] = useState(false);\n  const {\n    data,\n    refetch\n  } = useQuery(['user', props.login], fetchOneUser, {\n    enabled: false\n  });\n\n  const detailsOnClick = () => {\n    setShowDetails(current => !current);\n\n    if (!data) {\n      refetch();\n    }\n  };\n\n  const responses = data;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    style: {\n      width: 280\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"card-img-top cursor-pointer\",\n    onClick: detailsOnClick,\n    src: props.userAvatar,\n    alt: props.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body d-inline-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"card-title text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, props.login), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, responses && responses.length && showDetails && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row ml-.5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \"Name: \", responses[1].name), responses[1].bio && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row ml-.5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Bio: \", responses[1].bio), responses[1].company && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row ml-.5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, \"Company: \", responses[1].company), /*#__PURE__*/React.createElement(UserDetailsCounts, {\n    responses: responses,\n    userLogin: props.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: e => e.stopPropagation(),\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: props.userHtml,\n    className: \"btn btn-primary mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Go to GitHub Page\"))));\n};","map":{"version":3,"sources":["/Users/susanma/ThisDot/this-dot-final/src/components/UserCard.tsx"],"names":["React","useState","useQuery","UserDetailsCounts","fetchOneUser","key","login","starCount","userMetaData","urls","responses","Promise","all","map","url","fetch","linkHeader","data","response","headers","has","get","split","slice","pop","shift","json","push","UserCard","props","showDetails","setShowDetails","refetch","enabled","detailsOnClick","current","width","userAvatar","length","name","bio","company","e","stopPropagation","userHtml"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useQuery } from 'react-query';\n\nimport './UserCard.css';\nimport { UserDetailsCounts } from './UserDetailsCounts';\n\nconst fetchOneUser: any = async (key: string, login: string) => {\n  const starCount = `https://api.github.com/users/${login}/starred?per_page=1`;\n  const userMetaData = `https://api.github.com/users/${login}`;\n  const urls = [starCount, userMetaData];\n  const responses = await Promise.all(urls.map((url) => fetch(url)));\n  let linkHeader = null;\n  const data = await Promise.all(\n    responses.map((response: any) => {\n      const headers = response.headers;\n      if (headers.has('link')) {\n        // There are many headers that are returned in the response above. The starCount variable is a hard-coded url that puts one star per page, which will provide us the number of stars in the `per_page=` parameter. The chained methods below allow us to get the star count.\n        linkHeader = headers\n          .get('link')\n          .split('page=')\n          .slice(-1)\n          .pop()\n          .split('>')\n          .shift();\n      }\n      return response.json();\n    })\n  );\n\n  // linkHeader gives us the star count is pushed into data in order to be used in useQuery.\n  data.push(linkHeader);\n  return data;\n};\n\ninterface Props {\n  userHtml: string;\n  login: string;\n  userAvatar: string;\n}\n\nexport const UserCard = (props: Props) => {\n  const [showDetails, setShowDetails] = useState(false);\n  const { data, refetch } = useQuery(['user', props.login], fetchOneUser, {\n    enabled: false,\n  });\n\n  const detailsOnClick = () => {\n    setShowDetails((current) => !current);\n    if (!data) {\n      refetch();\n    }\n  };\n\n  const responses = data as any;\n  return (\n    <div className=\"card\" style={{ width: 280 }}>\n      <img\n        className=\"card-img-top cursor-pointer\"\n        onClick={detailsOnClick}\n        src={props.userAvatar}\n        alt={props.login}\n      ></img>\n      <div className=\"card-body d-inline-block\">\n        <h5 className=\"card-title text-center\">{props.login}</h5>\n        <div className=\"card-text\">\n          {responses && responses.length && showDetails && (\n            <>\n              <div className=\"row ml-.5\">Name: {responses[1].name}</div>\n              {responses[1].bio && (\n                <div className=\"row ml-.5\">Bio: {responses[1].bio}</div>\n              )}\n              {responses[1].company && (\n                <div className=\"row ml-.5\">Company: {responses[1].company}</div>\n              )}\n              <UserDetailsCounts\n                responses={responses}\n                userLogin={props.login}\n              />\n            </>\n          )}\n        </div>\n        <div className=\"col text-center\">\n          <a\n            onClick={(e) => e.stopPropagation()}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={props.userHtml}\n            className=\"btn btn-primary mt-2\"\n          >\n            Go to GitHub Page\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}